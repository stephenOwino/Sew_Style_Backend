name: Backend CI/CD

on:
  push:
    branches:
      - main
      - sew-ba
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java Development Kit (JDK)
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'  # Specify the Java version to use
          distribution: 'temurin'  # Choose the JDK distribution (Temurin)

      # Step 3: Build the application using Maven
      - name: Build with Maven
        run: mvn clean install  # Clean and build the Maven project

      # Step 4: List files in the target directory to verify the build output
      - name: List files in target directory
        run: ls -R target  # List all files recursively in the 'target' directory

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username from GitHub Secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password from GitHub Secrets

      # Step 6: Build and push the Docker image to Docker Hub
      - name: Build and Push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .  # Build context is the current directory
          push: true  # Push the built image to Docker Hub
          tags: otizaaa/sewstyles-backend:latest  # Tag for the Docker image

      # Step 7: Docker Compose Up
      - name: Docker Compose Up
        run: |
          docker-compose -f docker-compose.yml up -d  # Start services defined in the docker-compose.yml file in detached mode

      # Step 8: Deploy the application to Render
      - name: Deploy to Render
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"service_id": "YOUR_SERVICE_ID"}' \
            https://api.render.com/v1/services/YOUR_SERVICE_ID/deploy
        # Replace 'YOUR_SERVICE_ID' with your actual Render service ID

      # Step 9: Clean up Docker Compose
      - name: Clean up Docker Compose
        run: docker-compose -f docker-compose.yml down  # Stop and remove all services and networks
