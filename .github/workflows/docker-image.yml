name: Backend CI/CD

on:
  push:
    branches:
      - main
      - sew-ba
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java Development Kit (JDK)
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'  # Java version used in your project
          distribution: 'temurin'  # Use AdoptOpenJDK

      # Step 3: Build the application using Maven
      - name: Build with Maven
        run: mvn clean install

      # Step 4: List files in the target directory to verify the build output
      - name: List files in target directory
        run: ls -R target

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub Username from secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub Password from secrets

      # Step 6: Build and Push Docker image
      - name: Build and Push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .  # The directory where Dockerfile is located
          push: true  # Push to Docker Hub
          tags: otizaaa/sewstyles-backend:latest  # Docker image tag to be pushed

      # Step 7: Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d\" -f4)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      # Step 8: Docker Compose Up (Starting services)
      - name: Docker Compose Up
        run: |
          docker-compose -f docker-compose.yml up -d

      # Step 9: Deploy the application to Render (Deploy to cloud service)
      - name: Deploy to Render
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \  # Render API key from secrets
            -H "Content-Type: application/json" \
            -d '{"service_id": "YOUR_SERVICE_ID"}' \  # Replace YOUR_SERVICE_ID with actual service ID
            https://api.render.com/v1/services/YOUR_SERVICE_ID/deploy

      # Step 10: Clean up Docker Compose (Stop services after deployment)
      - name: Clean up Docker Compose
        run: docker-compose -f docker-compose.yml down
